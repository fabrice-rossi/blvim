% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grid-dynamic.R
\name{grid_blvim}
\alias{grid_blvim}
\title{Compute a collection of Boltzmann–Lotka–Volterra model solutions}
\usage{
grid_blvim(
  costs,
  X,
  alphas,
  betas,
  Z,
  epsilon = 0.01,
  iter_max = 50000,
  conv_check = 100,
  precision = 1e-06,
  quadratic = FALSE
)
}
\arguments{
\item{costs}{a cost matrix}

\item{X}{a vector of production constraints}

\item{alphas}{a vector of return to scale parameters}

\item{betas}{a vector of cost inverse scale parameters}

\item{Z}{a vector of initial destination attractivenesses}

\item{epsilon}{the update intensity}

\item{iter_max}{the maximal number of steps of the BLV dynamic}

\item{conv_check}{number of iterations between to convergence test}

\item{precision}{convergence threshold}

\item{quadratic}{selects the update rule, see details.}
}
\value{
an object of class \code{sim_list}
}
\description{
This function computes a collection of flows between origin locations
and destination locations using \code{\link[=blvim]{blvim()}} on a grid of parameters. The flows
use the same costs, same production constraints and same attractivenesses.
Each flow is computed using one of all the pairwise combinations between
the alpha values given by \code{alphas} and the beta values given by \code{betas}. The
function returns an object of class \code{sim_list} which contains the resulting
flows.
}
\examples{
positions <- matrix(rnorm(10 * 2), ncol = 2)
distances <- as.matrix(dist(positions))
production <- rep(1, 10)
attractiveness <- c(2, rep(1, 9))
all_flows <- grid_blvim(distances, production, c(1.25, 1.5), c(1, 2, 3), attractiveness)
all_flows
length(all_flows)
all_flows[[2]]
}
